#!/usr/bin/env bash

redirect_to=${BLK_REDIRECT_TO:-'127.0.0.1'}

block() {
    local site=$1

    if grep -q "$site" /etc/hosts; then
        echo "$site is already blocked!"
        return 1
    else
        # Lookup DNS records for $redirect_to with dig. dig will return one line
        # per IP-address, where the first line is $redirected_url itself.
        ips=$(dig +short "$redirect_to")

        # If $redirected_url is redirected to one or more IP-addresses, remove
        # $redirected_url from $ips.
        if [[ $(($(echo "$ips" | wc -l))) -gt 1 ]]; then
            ips=$(echo "$ips" | tail -n +2)
        fi

        # 1. Format a hosts redirect string for each IP-address from the lookup and tag it with # blk.
        # 2. Add formatted strings to hosts file and redirect output to /dev/null.
        echo "$ips" | xargs -I {} echo $'{}\t'"$site"' # blk -> '"$redirect_to" | tee -a /etc/hosts > /dev/null
    fi
}

unblock() {
    local site=$1

    if grep -q "$site" /etc/hosts; then
        sed -i'.bak' $'/^.*\t'"$site"' # blk/d' /etc/hosts
    else
        echo "$site is not blocked!"
        return 1
    fi
}

list() {
    # 1. Find all lines with the tag # blk.
    # 2. Use a regex to find the redirected site and the url it is redirected to,
    #    and to format the string.
    # 3. Filter out duplicates.
    grep '# blk' /etc/hosts | sed -E $'s/^.*\t(.*) # blk -> (.*)$/\\1 -> \\2/' | uniq
}

to_seconds() {
    local time_amount=$1
    local time_unit=$2

    local time_multiplier=0
    case $time_unit in
        second|seconds)
            time_multiplier=1
            ;;
        minute|minutes)
            time_multiplier=60
            ;;
        hour|hours)
            time_multiplier=3600
            ;;
        day|days)
            time_multiplier=86400
            ;;
    esac

    local seconds=$((time_amount*time_multiplier))
    echo $seconds
}

action=$1
shift

case $action in
    list)
        list
        ;;
    block|unblock)
        sites=()
        mode='simple'

        while test ${#} -gt 0; do # Loops through all arguments with shift.
            case $1 in
                for)
                    shift
                    time_amount=$1
                    shift
                    time_unit=$1
                    mode='for'
                    ;;
                until)
                    shift
                    until=$1
                    mode='until'
                    ;;
                --redirect-to)
                    shift
                    redirect_to=$1
                    ;;
                *)
                    sites+=($1)
                    ;;
            esac
            shift
        done

        # Checks if stdin exists (if data is being fed through pipe)
        if [[ ! -t 0 ]]; then
            while read -r pipe; do
                sites+=($pipe)
            done
        fi

        blocked_sites=''

        for site in "${sites[@]}"; do
            eval "${action}" "$site"
            if [[ $? == 0 ]]; then
                case $action in
                    'block')
                        action_msg='Blocked'
                        ;;
                    'unblock')
                        action_msg='Unblocked'
                        ;;
                esac

                case $mode in
                    'simple')
                        echo "$action_msg $site"
                        ;;
                    'for')
                        echo "$action_msg $site for $time_amount $time_unit"
                        ;;
                    'until')
                        echo "$action_msg $site until $until"
                        ;;
                esac

                blocked_sites="$blocked_sites $site"
            fi
        done

        case $action in
            'block')
                reverse_fn='unblock'
                ;;
            'unblock')
                reverse_fn='block'
                ;;
        esac

        case $mode in
            'for')
                seconds=$(to_seconds "$time_amount" "$time_unit")
                (sleep "$seconds"; blk $reverse_fn "$blocked_sites" >& /dev/null)&
                ;;
            'until')
                echo "blk $reverse_fn $blocked_sites" | at "$until"
                ;;
        esac
        ;;
esac
